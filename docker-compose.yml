version: '3.8'

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-inventory_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme_secure_password}
      POSTGRES_DB: ${POSTGRES_DB:-inventory_nova}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-inventory_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://inventory_user:changeme_secure_password@db:5432/inventory_nova}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-secret-key-change-in-production}
      JWT_ACCESS_TOKEN_EXPIRES: ${JWT_ACCESS_TOKEN_EXPIRES:-3600}
      FLASK_ENV: ${FLASK_ENV:-production}
      DATA_PATH: ${DATA_PATH:-/data}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5173}
    volumes:
      - ./data:/data
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    command: gunicorn -w 4 -b 0.0.0.0:5000 "api.app:app"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:5000/api

volumes:
  postgres_data:
